import{R as f}from"./index.45eae9d1.js";import{F as k}from"./index.69ee1880.js";import{c as g}from"./create.af6e9796.js";import{c as d,a as x}from"./relation.9e421618.js";/* empty css               */import{S as y}from"./index.a42a7a69.js";import{u as p}from"./shared.285cd5cf.js";const C=e=>["normal","small","mini"].includes(e),V={value:{default:!1},label:{type:[String,Number]},checkedValue:{default:!0},uncheckedValue:{default:!1},size:{type:String,default:"normal",validator:C},disabled:{type:Boolean,default:!1},readonly:{type:Boolean,default:!1},ripple:{type:Boolean,default:!0},validateTrigger:{type:Array,default:()=>["onChange"]},rules:{type:Array}};const{createComponent:$,namespace:a}=g("checkbox"),P=$({props:V,mixins:[d("checkboxGroup",{parentKey:"checkboxGroup",childrenKey:"checkboxes"}),d("form",{parentKey:"form",childrenKey:"formComponents"})],directives:{Ripple:f},data:()=>({localValue:!1,errorMessage:""}),computed:{checked(){return this.localValue===this.checkedValue},maximum(){return this.checkboxGroup?this.checkboxGroup.checkedCount>=Number(this.checkboxGroup.max):!1}},watch:{value:{handler(e){this.localValue=e},immediate:!0}},methods:{reset(){this.$emit("input",this.uncheckedValue),this.resetValidation()},validate(){this.$refs.formItem.validate()},resetValidation(){this.$refs.formItem.resetValidation()},toggle(e){const{uncheckedValue:t,checkedValue:r}=this;![t,r].includes(e)&&(e=this.checked?t:r),this.change(e)},nextTickValidateWithTrigger(e){this.$nextTick(()=>{var t;(t=this.$refs.formItem)==null||t.validateWithTrigger(this.validateTrigger,e,this.rules,this.value)})},change(e){var t,r;this.localValue=e,this.$emit("input",e),this.$emit("change",e),this.nextTickValidateWithTrigger("onChange"),e===this.checkedValue?(t=this.checkboxGroup)==null||t.onChecked(this.checkedValue):(r=this.checkboxGroup)==null||r.onUnchecked(this.checkedValue)},handleClick(e){var o,l;const{disabled:t,readonly:r,uncheckedValue:c,checkedValue:s}=this;((o=this.form)==null?void 0:o.disabled)||t||(this.$emit("click",e),this.nextTickValidateWithTrigger("onClick"),!(((l=this.form)==null?void 0:l.readonly)||r)&&(!this.checked&&this.maximum||this.change(this.checked?c:s)))},sync(e){this.localValue=e.includes(this.checkedValue)?this.checkedValue:this.uncheckedValue},handleErrorMessageChange(e){this.errorMessage=e}},render(){const e=arguments[0],{label:t,value:r,rules:c,checked:s,ripple:o,size:l,handleClick:b,disabled:h,readonly:u,form:i,errorMessage:m,checkboxGroup:n,handleErrorMessageChange:v}=this;return e(k,{attrs:{"checkbox-cover":!0,label:t,value:r,rules:c},ref:"formItem",on:{"error-message-change":v}},[e("label",{class:[a(),"m--box",a(`--${l}`),(i==null?void 0:i.disabled)||h?a("--text-disabled"):null,(n==null?void 0:n.errorMessage)||m?a("--text-error"):null]},[e("input",{class:a("__input"),attrs:{type:"checkbox",disabled:(i==null?void 0:i.disabled)||h,readOnly:(i==null?void 0:i.readonly)||u},on:{click:b}}),e("div",{class:[a("__checkbox-container"),a(`--${l}-checkbox-container`)],directives:[{name:"ripple",value:{disabled:!o||h||u||(i==null?void 0:i.disabled)||(i==null?void 0:i.readonly)}}]},[e("div",{class:[a("__checkbox"),a(`--${l}-checkbox`),s?a(`--${l}-svg`):null,s?null:a("--border-visible"),s?a("--checked"):null,(n==null?void 0:n.errorMessage)||m?a(s?"--background-error":"--border-error"):null,(i==null?void 0:i.disabled)||h?a("--disabled"):null]})]),e("div",{class:a("__label")},[this.slots()])])])}}),T=e=>["horizontal","vertical"].includes(e),M={value:{type:Array,default:()=>[]},label:{type:[String,Number]},max:{type:[String,Number]},direction:{type:String,default:"horizontal",validator:T},validateTrigger:{type:Array,default:()=>["onChange"]},rules:{type:Array}},{createComponent:I,namespace:_}=g("checkbox-group"),A={horizontal:"row",vertical:"column"},R=I({props:M,mixins:[x("checkboxGroup",{childrenKey:"checkboxes"}),d("form",{parentKey:"form",childrenKey:"formComponents"})],data:()=>({errorMessage:""}),computed:{checkedCount(){return this.value.length}},watch:{value(){this.syncCheckboxes()},checkboxes(){this.syncCheckboxes()}},methods:{reset(){this.$emit("input",[]),this.resetValidation()},validate(){this.$refs.formItem.validate()},resetValidation(){this.$refs.formItem.resetValidation()},checkAll(){const e=this.checkboxes.map(({checkedValue:r})=>r),t=p(e);return this.$emit("input",t),t},inverseAll(){const e=this.checkboxes.filter(({checked:r})=>!r).map(({checkedValue:r})=>r),t=p(e);return this.$emit("input",t),t},nextTickValidateWithTrigger(e){this.$nextTick(()=>{var t;(t=this.$refs.formItem)==null||t.validateWithTrigger(this.validateTrigger,e,this.rules,this.value)})},syncCheckboxes(){this.checkboxes.forEach(({sync:e})=>e(this.value))},change(e){this.$emit("input",e),this.$emit("change",e),this.nextTickValidateWithTrigger("onChange")},onChecked(e){this.value.includes(e)||this.change([...this.value,e])},onUnchecked(e){!this.value.includes(e)||this.change(this.value.filter(t=>t!==e))},handleErrorMessageChange(e){this.errorMessage=e}},render(){const e=arguments[0],{label:t,value:r,rules:c,direction:s,handleErrorMessageChange:o}=this;return e(k,{attrs:{"checkbox-group-cover":!0,label:t,value:r,rules:c},ref:"formItem",on:{"error-message-change":o}},[e(y,{class:_(),attrs:{"checkbox-group-cover":!0,direction:A[s]}},[this.slots()])])}});export{P as C,R as a};
