const d={data:()=>({keyboardActiveIndex:0,keyboardLastIndex:0,keyboardDisabledIndexes:[],keyboardDisabled:!1}),computed:{canMove(){return this.keyboardLastIndex+1-this.keyboardDisabledIndexes.length>1}},methods:{handleKeydownActive(e){if(!this.keyboardDisabled)switch(e.code){case"ArrowDown":this.nextActiveIndex(),this.handleKeydownArrow();break;case"ArrowUp":this.prevActiveIndex(),this.handleKeydownArrow();break;case"Escape":this.handleKeydownEscape();break;case"Enter":case"NumpadEnter":this.handleKeydownEnter(this.keyboardActiveIndex);break}},isDisabledIndex(){return this.keyboardDisabledIndexes.includes(this.keyboardActiveIndex)},nextActiveIndex(){!this.canMove||(this.keyboardActiveIndex=this.keyboardActiveIndex===this.keyboardLastIndex?0:this.keyboardActiveIndex+1,this.isDisabledIndex()&&this.nextActiveIndex())},prevActiveIndex(){!this.canMove||(this.keyboardActiveIndex=this.keyboardActiveIndex===0?this.keyboardLastIndex:this.keyboardActiveIndex-1,this.isDisabledIndex()&&this.prevActiveIndex())},handleKeydownEnter(){},handleKeydownArrow(){},handleKeydownEscape(){}},mounted(){window.addEventListener("keydown",this.handleKeydownActive)},beforeDestroy(){window.removeEventListener("keydown",this.handleKeydownActive)}};export{d as K};
